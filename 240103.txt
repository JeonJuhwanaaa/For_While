<오자마자 확인할 것>
git 으로 자신의 계정/이메일 확인

-git config --global uesr.name
-git config --global user.email
or -git config --list

-자격증명관리에서 본인 github 계정 되어있나 확인

=======================================
<git hub에서 불러오기>

git clone 소스코드 파일명 // 예)git clone https://github.com/JeonJuhwanaaa/korit_back_5_java_study.git(소스코드) Juhwan(파일명)

=======================================

<복합대입연산>
+= / *=

        int num1 = 10;
        int num2 = 20;
        num1 = num1 + num2; //뒤에서부터 계산, 자기자신한테 어떠한 값을 대입
        num1 += num2; //자기자신한테 num2값을 더해서 대입해라
        num1 *= num2; //자기자신한테 num2값을 곱해서 대입해라

<증감연산자>

        *  i++ //1씩 증가/ 후 증가연산 ★대부분 후 증/감 사용★
        *  ++i //선 증가연산
        *  i--
        *  --i

        int i = 0;
        System.out.println(i++); //다음 i부터 증가한다(후 증가)
        System.out.println(i);
        System.out.println(i--); //다음 i부터 감소한다(후 감소)
        System.out.println(i);

=======================================

<조건문>

        int x = 0;
        int y = -4;

if (x == 0 || y == 0) {
            System.out.println("오류");
        } else if (x > 0 && y > 0) {
            System.out.println("2사분면");
        } else if (x > 0 && y < 0) {
            System.out.println("4사분면");
        } else if (x < 0 && y < 0) {
            System.out.println("1사분면");
        } else {
            System.out.println("3사분면");
        }

=======================================

<Input>
Ctrl + 스페이스 -> 자동변수명 지정

Scanner scan = new Scanner(System.in); // System.in-> 입력대기
String(문자열)로 입력받고 싶으면 next() 나 nextLine() 을
int(정수)로 입력받고 싶다면 nextInt() 를 사용하여 입력받으면 알아서 해당 타입으로 입력된다.

예) Int i = scan.NextInt();
String str = scan.Next(); / scan.NextLine();

        Scanner scanner = new Scanner(System.in); //System.in -> 입력도구

        scanner.next(); //한줄 당 입력 개수 1
        scanner.next();
        scanner.next();

띄어쓰기 있으면 입력의 중단으로 인식
엔터는 입력의 끝으로 인식
but, nextLine은 띄어쓰기도 입력으로 인식

 /*
        * 이름 : 전주환(문자)
        * 나이 : 30(숫자)
        * 연락처 : 0100000000(문자열)
        * 학년 : 3(숫자)
        * 주소 : 부산진구(문자)
        * */
        Scanner scan = new Scanner(System.in);

        System.out.print("이름: ");
        String str1 = scan.next();
        System.out.print("나이: ");
        int i1 = scan.nextInt();
        System.out.print("연락처: ");
        String str2 = scan.next();
        System.out.print("학년: ");
        int i2 = scan.nextInt();
        System.out.print("주소: ");
        String str3 = scan.next();

        System.out.println("이름: " + str1 + "\n" + "나이: " + i1 + "\n" + "연락처: " + str2 + "\n" + "학년: " + i2 + "\n" +"주소: " +str3);

=======================================
<<스위치문>>

어떠한 값이 키워드를 찾아가서 값을 출력하는거면 --> 스위치문
참 또는 거짓의 조건이 들어오면 --> if 문

----------------------------------------------------------- <<문자로>>
        Scanner scan = new Scanner(System.in);
        String num = null;

        System.out.println("번호 선택: ");
        num = scan.next();

        switch (num) { //num에 어떤 숫자가 들어가냐에 따라 그에 맞는 case를 찾아가서 거기서부터 출력, 중간에 break가 있다면 거기서 멈춤
            case "0":
                System.out.println("0선택");
                break; // 여기서 멈춤
            case "1":
                System.out.println("1선택");
                break;
            case "2":
                System.out.println("2선택");
                break;
            default: // ??
                System.out.println("오류");
----------------------------------------------------------- <<숫자로>>
        Scanner scan = new Scanner(System.in);
        int num = 0;

        System.out.println("번호 선택: ");
        num = scan.nextInt();

        switch (num) { //num에 어떤 숫자가 들어가냐에 따라 그에 맞는 case를 찾아가서 거기서부터 출력, 중간에 break가 있다면 거기서 멈춤
            case 0:
                System.out.println("0선택");
                break; // 여기서 멈춤
            case 1:
                System.out.println("1선택");
                break;
            case 2:
                System.out.println("2선택");
                break;
            default: // ??
                System.out.println("오류");

*함수정의는 class 안에 가능 / main 안에 xx

<<오버로딩 >>
public class Function02 {                              //클래스

    //매개변수x, 리턴x
    public static void  fx01() {
        //void -> 비어있는, 공허한
        System.out.println("fx01 함수 실행");
        System.out.println();
    }

    public static void fx02(int age, String name) {
        System.out.println("fx02 함수 실행");
        System.out.println("나이: " + age);
        System.out.println("이름: " + name);
        System.out.println();

    }
    
    //함수의 오버로딩: 함수명이 같더라도 매개변수의 자료형이 다르면 함수정의가 가능하다
    public static void fx02(String name, int age) { //매개변수가 중요하고 자료형과 변수는 상관x
        System.out.println("fx02 함수 실행");
        System.out.println("이름: " + name);
        System.out.println("나이: " + age);
        System.out.println();

    }

    public static void main(String[] args) {            //메인
        fx01();
        fx02(30, "전주환"); //fx02()안에 age, name 넣었기에 꼭 순서에 맞춰서 값 넣어주기
        fx02("전주환", 30);

=======================================
<<반복문>>
----------------------------------------------------------- <for문> / 반복횟수를 일정하게 증가시키면서 반복돼야할 때(반복횟수가 중심o, 조건이 중심xx)
        //반복문 -for문 (초기화문; 조건문(참일때 반복,거짓이면 스탑); 후처리문) / while문
        // 순서: 초기화문(선언은 최초한번만) > 조건문 > print 실행문 > 후처리문 순서
        for( int i = 0; i < 10; i++) { //i가 0~9까지 1씩 추가하면서 반복출력
            System.out.println("i: " + i);
        }
----------------------------------------------------------- <while문> / 조건이 중심o
        int i = 0;
        while (i< 10){ //여기서부터 필수, if처럼 조건만 들어간다
            System.out.println("i: " + i);
            i++;